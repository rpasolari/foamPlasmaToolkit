/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2412                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      changeDictionaryDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ePotential
{
    internalField   uniform 0;

    boundaryField
    {
        ".*"
        {
            type            zeroGradient;
        }

        backFront
        {
            type            empty;
        }

        left
        {
            type            fixedValue;
            value           uniform 10;
        }

        "procBoundary.*"
        {
            type            processor;
        }

        leftFluid_to_rightSolid
        {
            type            coupledElectricPotential;
            value           $internalField;
            surfCharge      surfCharge;
            surfChargeNbr   none;
            useImplicit     true;
        }
    }
}

eCharge
{
    internalField   uniform 0;

    boundaryField
    {
        ".*"
        {
            type            zeroGradient;
        }

        backFront
        {
            type            empty;
        }

        "procBoundary.*"
        {
            type            processor;
        }
    }
}

surfCharge
{
    internalField   uniform 0;

    boundaryField
    {
        ".*"
        {
            type            fixedValue;
            value           uniform 0;
        }

        backFront
        {
            type            empty;
        }

        "procBoundary.*"
        {
            type            processor;
            value           uniform 0;
        }

        leftFluid_to_rightSolid
        {
            type            fixedValue;
            value           uniform 1e-9;
        }
    }
}
